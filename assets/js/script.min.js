const navbar = document.querySelector('.navbar'); const navToggle = document.querySelector('.navbar__toggle'); const navMenu = document.querySelector('.navbar__menu'); const navLinks = document.querySelectorAll('.navbar__link'); const backToTopBtn = document.getElementById('back-to-top'); const initTheme = () => { const savedTheme = localStorage.getItem('theme') || 'light'; document.documentElement.setAttribute('data-theme', savedTheme); }; if (navToggle) { navToggle.addEventListener('click', () => { navToggle.classList.toggle('active'); navMenu.classList.toggle('active'); const isExpanded = navToggle.getAttribute('aria-expanded') === 'true'; navToggle.setAttribute('aria-expanded', !isExpanded); }); } navLinks.forEach(link => { link.addEventListener('click', () => { if (navToggle) { navToggle.classList.remove('active'); navMenu.classList.remove('active'); navToggle.setAttribute('aria-expanded', 'false'); } }); }); let lastScrollTop = 0; const handleNavbarScroll = () => { const scrollTop = window.pageYOffset || document.documentElement.scrollTop; if (scrollTop > 50) { navbar.classList.add('scrolled'); } else { navbar.classList.remove('scrolled'); } lastScrollTop = scrollTop; }; document.querySelectorAll('a[href^="#"]').forEach(anchor => { anchor.addEventListener('click', function (e) { e.preventDefault(); const target = document.querySelector(this.getAttribute('href')); if (target) { const offsetTop = target.getBoundingClientRect().top + window.pageYOffset - 80; window.scrollTo({ top: offsetTop, behavior: 'smooth' }); } }); }); const sections = document.querySelectorAll('section[id]'); const highlightNavOnScroll = () => { const scrollY = window.pageYOffset; sections.forEach(section => { const sectionHeight = section.offsetHeight; const sectionTop = section.offsetTop - 100; const sectionId = section.getAttribute('id'); const navLink = document.querySelector(`.navbar__link[href="#${sectionId}"]`); if (scrollY > sectionTop && scrollY <= sectionTop + sectionHeight) { navLinks.forEach(link => link.classList.remove('active')); if (navLink) navLink.classList.add('active'); } }); }; const handleBackToTop = () => { if (window.pageYOffset > 300) { backToTopBtn?.classList.remove('hidden'); backToTopBtn?.classList.add('block'); } else { backToTopBtn?.classList.add('hidden'); backToTopBtn?.classList.remove('block'); } }; if (backToTopBtn) { backToTopBtn.addEventListener('click', () => { window.scrollTo({ top: 0, behavior: 'smooth' }); }); } const observerOptions = { threshold: 0.1, rootMargin: '0px 0px -50px 0px' }; const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('revealed'); if (entry.target.classList.contains('timeline-item')) { entry.target.classList.add('visible'); const index = Array.from(entry.target.parentNode.children).indexOf(entry.target); const delay = index * 100; entry.target.style.transitionDelay = `${delay}ms`; } } }); }, observerOptions); const animateElements = () => { const elementsToAnimate = document.querySelectorAll('.scroll-reveal, .timeline-item, .card'); elementsToAnimate.forEach(element => { observer.observe(element); }); }; const initializeTimeline = () => { const timelineItems = document.querySelectorAll('.timeline-item'); timelineItems.forEach((item, index) => { item.classList.add('fade-in-up'); observer.observe(item); }); }; const openSidePanel = (panelId) => { const panel = document.getElementById(panelId); const overlay = document.getElementById('panel-overlay'); if (panel && overlay) { panel.classList.add('active'); overlay.classList.add('active'); panel.setAttribute('aria-hidden', 'false'); const closeButton = panel.querySelector('.panel-close'); if (closeButton) closeButton.focus(); document.addEventListener('keydown', handlePanelEscapeKey); document.body.style.overflow = 'hidden'; } }; const closeSidePanel = (panelId) => { const panel = document.getElementById(panelId); const overlay = document.getElementById('panel-overlay'); if (panel && overlay) { panel.classList.remove('active'); overlay.classList.remove('active'); panel.setAttribute('aria-hidden', 'true'); document.removeEventListener('keydown', handlePanelEscapeKey); document.body.style.overflow = ''; const triggerButton = document.querySelector(`[onclick="openSidePanel('${panelId}')"]`); if (triggerButton) triggerButton.focus(); } }; const handlePanelEscapeKey = (e) => { if (e.key === 'Escape') { const activePanel = document.querySelector('.side-panel.active'); if (activePanel) { closeSidePanel(activePanel.id); } } }; window.openSidePanel = openSidePanel; window.closeSidePanel = closeSidePanel; const lazyLoadImages = () => { const images = document.querySelectorAll('img[data-src]'); const imageObserver = new IntersectionObserver((entries, observer) => { entries.forEach(entry => { if (entry.isIntersecting) { const img = entry.target; img.src = img.dataset.src; img.removeAttribute('data-src'); imageObserver.unobserve(img); } }); }); images.forEach(img => imageObserver.observe(img)); }; let scrollTimeout; const throttleScroll = (func, delay) => { if (scrollTimeout) return; scrollTimeout = setTimeout(() => { func(); scrollTimeout = null; }, delay); }; const handleScroll = () => { throttleScroll(() => { handleNavbarScroll(); highlightNavOnScroll(); handleBackToTop(); }, 10); }; const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches; const animateCounters = () => { const counters = document.querySelectorAll('[data-count]'); counters.forEach(counter => { const target = parseInt(counter.dataset.count); const increment = target / 50; let current = 0; const updateCounter = () => { current += increment; if (current < target) { counter.textContent = Math.floor(current); requestAnimationFrame(updateCounter); } else { counter.textContent = target; } }; const counterObserver = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting && current === 0) { updateCounter(); counterObserver.unobserve(entry.target); } }); }, { threshold: 0.5 }); counterObserver.observe(counter); }); }; const scrollToContact = () => { const contactSection = document.getElementById('contact'); if (contactSection) { contactSection.scrollIntoView({ behavior: 'smooth', block: 'start' }); } }; const openCaseStudy = () => { const experienceSection = document.getElementById('experience'); if (experienceSection) { experienceSection.scrollIntoView({ behavior: 'smooth', block: 'start' }); } }; const openConsultingServices = () => { const skillsSection = document.getElementById('skills'); if (skillsSection) { skillsSection.scrollIntoView({ behavior: 'smooth', block: 'start' }); } }; const expandCompetency = (card) => { const allCards = document.querySelectorAll('.competency-card'); const isExpanded = card.classList.contains('expanded'); allCards.forEach(c => c.classList.remove('expanded')); if (!isExpanded) { card.classList.add('expanded'); } }; const showDetail = (detailType) => { const allDetails = document.querySelectorAll('.detail-card'); const targetDetail = document.getElementById(`detail-${detailType}`); allDetails.forEach(d => d.style.display = 'none'); if (targetDetail) { targetDetail.style.display = 'block'; targetDetail.classList.add('fade-in'); } }; const toggleCAR = (element) => { const carStory = element.closest('.car-story'); if (carStory) { carStory.classList.toggle('collapsed'); const expandText = element.querySelector('.expand-indicator'); if (expandText) { expandText.textContent = carStory.classList.contains('collapsed') ? 'Espandi →' : 'Comprimi ↑'; } } }; const toggleScenario = (card) => { const allCards = document.querySelectorAll('.scenario-card'); const isOpen = card.classList.contains('open'); allCards.forEach(c => { if (c !== card) { c.classList.remove('open'); const toggleIcon = c.querySelector('.toggle-icon'); if (toggleIcon) toggleIcon.textContent = '+'; } }); card.classList.toggle('open'); const toggleIcon = card.querySelector('.toggle-icon'); if (toggleIcon) { toggleIcon.textContent = card.classList.contains('open') ? '−' : '+'; } }; let currentStory = 1; const showStory = (storyNumber) => { const allStories = document.querySelectorAll('.story-card'); allStories.forEach(story => { story.classList.remove('active'); if (story.dataset.story === storyNumber.toString()) { story.classList.add('active'); } }); currentStory = storyNumber; }; const showNextStory = () => { currentStory = currentStory >= 3 ? 1 : currentStory + 1; showStory(currentStory); }; const init = () => { initTheme(); if (!prefersReducedMotion) { animateElements(); initializeTimeline(); } lazyLoadImages(); window.addEventListener('scroll', handleScroll); handleNavbarScroll(); highlightNavOnScroll(); handleBackToTop(); }; if (document.readyState === 'loading') { document.addEventListener('DOMContentLoaded', init); } else { init(); } document.addEventListener('DOMContentLoaded', () => { animateCounters(); showDetail('manufacturing'); }); if ('serviceWorker' in navigator && window.location.protocol === 'https:') { window.addEventListener('load', () => { navigator.serviceWorker.register('/sw.js') .catch(() => { }); }); } window.scrollToContact = scrollToContact; window.openCaseStudy = openCaseStudy; window.openConsultingServices = openConsultingServices; window.expandCompetency = expandCompetency; window.showDetail = showDetail; window.toggleCAR = toggleCAR; window.toggleScenario = toggleScenario; window.showStory = showStory; window.showNextStory = showNextStory;